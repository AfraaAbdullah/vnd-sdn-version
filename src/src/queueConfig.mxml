<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml"
		   creationComplete="init()">
	<mx:Script>
		<![CDATA[
			import action_alert.HAlert;
			import action_alert.HMensagens;
			
			import mx.collections.ArrayCollection;
			import mx.containers.Form;
			import mx.containers.FormItem;
			import mx.containers.HBox;
			import mx.controls.Button;
			import mx.controls.ComboBox;
			import mx.controls.Text;
			import mx.controls.TextInput;
			
			private var boxViewer:TextInput=new TextInput();
			private var boxViewer1:TextInput=new TextInput();			
			private var countNumberInterface:int=1;
			private var regular:int=2;
			private var regularInterface:int=2;
			private var buttonGo:Button=new Button();	
			private var listMaxRate1:Array = new Array();
			private var listMinRate1:Array = new Array();
			private var listInterface1:Array = new Array();
			private var listqosName1:Array = new Array();				
			private var listSwitch1:Array = new Array();
			private var listQueue1:Array = new Array();
			private var tb3:ComboBox = new ComboBox();	
			private var maxrate:String="";
			private var minrate:String="";
			private var ifacemaxrate:String="";
			private var ifaceminrate:String="";
			private var interfacee:String="";
			private var queuename:String="";
			private var switchh:String="";
			private var listInt1:Array = new Array();
			
			public var isChildTemplatedOne:Boolean;
			public var valueObjArr:ArrayCollection=new ArrayCollection();	
			public var objparaArrayCol:ArrayCollection=new ArrayCollection();
			[Bindable] public var form:Form=new Form();						
			public var ye:int=0;			
			
			public function change(eve:Event):void {
				var bool:Boolean=false;
				var obj:ChangedTemp=new ChangedTemp();
				
				if(eve.target.parent.label=="Switch Interface")
					obj.id="interface";
				else if(eve.target.parent.label=="Link Max Rate(Mbs)")
					obj.id="maxrate";
				else if(eve.target.parent.label=="Link Min Rate(Mbs)")
					obj.id="minrate";
				else if(eve.target.parent.label=="Scenario Max Rate(Mbs)")
					obj.id="ifacemaxrate";
				else if(eve.target.parent.label=="Scenario Min Rate(Mbs)")
					obj.id="ifaceminrate";
				else if(eve.target.parent.label=="Queue Name")
					obj.id="queuename";
				//else
				//obj.id=eve.target.parent.label;
				
				if(eve.target.className=='TextInput'){
					obj.name=eve.target.text;
					if(obj.id=='sw'){
						switchh=eve.target.text;
					}
					else if(obj.id=='maxrate'){
						maxrate=eve.target.text;
					}
					else if(obj.id=='minrate'){
						minrate=eve.target.text;
					}
					else if(obj.id=='queuename'){
						queuename=eve.target.text;
					}
					else if(obj.id=='ifacemaxrate'){
						ifacemaxrate=eve.target.text;
					}
					else if(obj.id=='ifaceminrate'){
						ifaceminrate=eve.target.text;
					}
				}				
				if(eve.target.className=='ComboBox'){
					
					if(obj.id=='interface'){
						interfacee=eve.target.selectedItem;
					}
					
					obj.name=eve.target.selectedIndex;
					obj.IsCombo=true;
					obj.combeValue=eve.target.value.toString()					
				}				
				for(var j:int=0;j<valueObjArr.length;j++){
					if(valueObjArr[j].id==obj.id){
						bool=true;						
						if(isChildTemplatedOne){
							valueObjArr[j].haschanged=true;							
						}						
						valueObjArr[j].name=obj.name;
						valueObjArr[j].combeValue=obj.combeValue;
						break;
					}
				}				
				if(!bool){
					if(isChildTemplatedOne)obj.haschanged=true;
					valueObjArr.addItem(obj);
				}
			}
			
			private function clickQueue(evt:MouseEvent):void {
				regular=2;
				regularInterface=2;
				this.removeChild(form); 
				init();
			}
			
			private function clickGo(evt:MouseEvent):void {
				regular=1;
				regularInterface=2;
				//this.secondTime=true;
				this.removeChild(form); 
				init();				
			}
			
			private function addinterface(evt:MouseEvent):void {
				regularInterface=1;
				regular=2;
				//this.secondTime=true;
				var inn:int=tb3.selectedIndex;
				tb3.dataProvider.removeItemAt(inn);				
				this.removeChild(form); 
				init();
			}
			
			public function listnerAddHandler():void {
				this.addEventListener(MouseEvent.MOUSE_MOVE,uppd);
			}
			
			private function uppd(eve:MouseEvent):void {
				var muev:Event=new Event("click");
				dispatchEvent(muev);
			}
			
			private function clickBack(evt:MouseEvent):void {
				regular=0;
				regularInterface=2;
				//this.secondTime=true;
				this.removeChild(form); 
				init();
			}
			
			public function init():void {
				form=new Form();
				this.addChild(form);
				
				for(var i:int=0;i<objparaArrayCol.length;i++){
					var obj:objParameter=objparaArrayCol[i];
				}
				
				
				for(i=0; i<parentApplication.allnames.length; i++) {						
					var tb:TextInput = new TextInput();
					var frmItem:FormItem = new FormItem();
					var frmItem1:FormItem = new FormItem();
					frmItem.direction = "horizontal";
					buttonGo=new Button();								
					var buttonBack:Button=new Button();
					var buttonQueue:Button=new Button();
					var buttonBackQos:Button=new Button();
					var contein3:HBox = new HBox();
					var contein2:HBox = new HBox();
					var contein1:HBox = new HBox();
					var word:Text = new Text();	
					//tb.addEventListener(Event.CHANGE UPDATE_COMPLETE,change);					
					//tb.addEventListener(FlexEvent.UPDATE_COMPLETE,change);
					
					if(parentApplication.allnames[i]=="queuename"){	
						tb.width=100;	
						tb.editable=false;
						var test:Boolean=false;									
						if(regular==1){
							if(parentApplication.countNumber1-1!=parentApplication.listQueueName.length){																
								tb.text="Queue "+(parentApplication.countNumber1);
								test=true;
								boxViewer1.text=String(parentApplication.countNumber1++);
							}											
							else if(parentApplication.countNumber1-1==parentApplication.listQueueName.length){			
								queuename="Queue "+(parentApplication.countNumber1-1);
								parentApplication.listQueueName[parentApplication.countNumber1-1]=queuename;
								obj.arrayqueueName=[];		
								for(var j:int=0;j<parentApplication.listQueueName.length;j++){	
									obj.arrayqueueName.push(parentApplication.listQueueName[j]);
								}									
								tb.text="Queue "+(parentApplication.countNumber1);
								queuename=tb.text;
								boxViewer.text=String(parentApplication.countNumber1++);
							}
						}									
						else if(regular==0){
							boxViewer.text=String(parentApplication.countNumber1--);
							tb.text=obj.arrayqueueName[parentApplication.countNumber1-1];
						}
						else{
							queuename="Queue "+(parentApplication.countNumber1-1);
							tb.text=queuename;
							if (parentApplication.countNumber1-1==parentApplication.listQueueName.length)
								buttonGo.enabled=false;
						}
						tb.width=100;
						frmItem.label="Queue Name";
						
						if (parentApplication.countNumber1 == 1)
							buttonBack.enabled=false;
						else if(parentApplication.countNumber1-1==parentApplication.listQueueName.length)
							buttonGo.enabled=false;
						
						boxViewer1.width=30;
						boxViewer1.editable=false;
						boxViewer1.text=String(parentApplication.countNumber1);
						
						buttonGo.label = ">"
						buttonGo.addEventListener(MouseEvent.CLICK, clickGo);
						buttonBack.label = "<"
						buttonBack.addEventListener(MouseEvent.CLICK, clickBack);
						contein2.addChild(buttonBack);
						contein2.addChild(boxViewer1);
						contein2.addChild(buttonGo);
						contein2.setStyle("horizontalAlign","center");							
						contein2.percentWidth=100;							
						form.addChild(contein2);
						frmItem.addChild(tb);
						form.addChild(frmItem);
						
					}
					else if(parentApplication.allnames[i]=="interface"){	
						tb3.addEventListener(Event.CHANGE,change);						
						tb3.dataProvider = new ArrayCollection(parentApplication.getInterfaces.sort());
						tb3.selectedIndex=-1;
						tb3.width=100;
						frmItem.label="Switch Interface";
						if(regularInterface==1){		
							parentApplication.listqosInterface[countNumberInterface-1]=interfacee;
							obj.arrayqueueInterface=[];
							
							for(j=0;j<parentApplication.listqosInterface.length;j++){	
								obj.arrayqueueInterface.push(parentApplication.listqosInterface[j]);
							}	
							countNumberInterface++;
							tb3.selectedIndex=-1;
							interfacee="";							
						}	
						else {
							
							tb3.selectedIndex=-1;
						}
						word = new Text();								
						word.text = "--- Queue Configuration ---";
						word.setStyle("fontSize", "16");
						word.setStyle("textAlign", "center");
						contein1.addChild(word);
						contein1.setStyle("horizontalAlign","center");	
						contein1.percentWidth=100;
						form.addChild(contein1);						
						
						var add:Button = new Button();
						add.label="add";
						add.addEventListener(MouseEvent.CLICK, addinterface);
						var texto:Text = new Text;
						//texto.setStyle("color", "Red");
						texto.setStyle('fontWeight','bold');
						texto.text="Switch Interfaces added:";
						for(var a:int=0;a<parentApplication.listqosInterface.length;a++){
							texto.text = texto.text+"\n"+obj.arrayqueueInterface[a];
							//var TextData:Object = tb3.dataProvider[parentApplication.listqosInterface[a]];
							//tb3.dataProvider.removeItem({label:'s1-eth0'});
						}
						frmItem.addChild(tb3);
						frmItem.addChild(add);
						form.addChild(frmItem);
						frmItem1.addChild(texto);
						form.addChild(frmItem1);						
					}
					else if(parentApplication.allnames[i]=="maxrate"){	
						tb.width=120;
						frmItem.label="Link Max Rate(Mbs)";
						if(regular==1){
							if(parentApplication.countNumber1-2!=parentApplication.listqosMaxRate.length){	
								if(parentApplication.listqosMaxRate[parentApplication.countNumber1-2]==""&&maxrate!=""||(maxrate!=parentApplication.listqosMaxRate[parentApplication.countNumber1-2]&&maxrate!="")){
									parentApplication.listqosMaxRate[parentApplication.countNumber1-2]=maxrate;
									obj.arrayqueueMaxRate[parentApplication.countNumber1-2]=maxrate;
									maxrate="";
								}
								tb.text=obj.arrayqueueMaxRate[parentApplication.countNumber1-1];
								test=true;
							}										
							else if(test==false){
								
								parentApplication.listqosMaxRate[parentApplication.countNumber1-2]=maxrate;
								obj.arrayqueueMaxRate=[];							
								for(j=0;j<parentApplication.listqosMaxRate.length;j++){	
									obj.arrayqueueMaxRate.push(parentApplication.listqosMaxRate[j]);
								}
								tb.text="";
								maxrate="";
							}
						}	
						else if (regular==0){
							tb.text=obj.arrayqueueMaxRate[parentApplication.countNumber1-1];
						}
						else{
							tb.text=parentApplication.listqosMaxRate[parentApplication.countNumber1-1];
						}
						tb.addEventListener(Event.CHANGE,change);
						frmItem.addChild(tb);
						form.addChild(frmItem);
					}
					else if(parentApplication.allnames[i]=="ifaceminrate"){	
						tb.width=120;
						frmItem.label="Scenario Min Rate(Mbs)";
						tb.text=ifaceminrate;
						obj.arrayqueueIfaceMinRate=ifaceminrate;
						parentApplication.listqosScenarioMinRate=ifacemaxrate;
						tb.addEventListener(Event.CHANGE,change);
						frmItem.addChild(tb);
						form.addChild(frmItem);
					}
					else if(parentApplication.allnames[i]=="ifacemaxrate"){	
						tb.width=120;
						frmItem.label="Scenario Max Rate(Mbs)";
						tb.text=ifacemaxrate;
						obj.arrayqueueIfaceMaxRate=ifacemaxrate;
						parentApplication.listqosScenarioMaxRate=ifacemaxrate;
						tb.addEventListener(Event.CHANGE,change);
						frmItem.addChild(tb);
						form.addChild(frmItem);
					}
					else if(parentApplication.allnames[i]=="minrate"){	
						tb.width=120;
						frmItem.label="Link Min Rate(Mbs)";
						if(regular==1){
							if(parentApplication.countNumber1-2!=parentApplication.listqosMinRate.length){	
								if(parentApplication.listqosMinRate[parentApplication.countNumber1-2]==""&&minrate!=""||(minrate!=parentApplication.listqosMinRate[parentApplication.countNumber1-2]&&minrate!="")){
									parentApplication.listqosMinRate[parentApplication.countNumber1-2]=minrate;
									obj.arrayqueueMinRate[parentApplication.countNumber1-2]=minrate;
									minrate="";
								}
								tb.text=obj.arrayqueueMinRate[parentApplication.countNumber1-1];
								//listMinRate1[ye]=obj.arrayqueueMinRate[parentApplication.countNumber1-1];
								test=true;
							}										
							else if(test==false){
								parentApplication.listqosMinRate[parentApplication.countNumber1-2]=minrate;
								obj.arrayqueueMinRate=[];
								for(j=0;j<parentApplication.listqosMinRate.length;j++){	
									obj.arrayqueueMinRate.push(parentApplication.listqosMinRate[j]);
								}		
								tb.text="";
								minrate="";
							}
						}	
						else if (regular==0){
							tb.text=obj.arrayqueueMinRate[parentApplication.countNumber1-1];
							//listMinRate1[ye]=obj.arrayqueueMinRate[ye][countNumber1-1];
						}
						else{
							tb.text=parentApplication.listqosMinRate[parentApplication.countNumber1-1];
						}
						tb.addEventListener(Event.CHANGE,change);
						frmItem.addChild(tb);
						form.addChild(frmItem);
					}
					
					if(parentApplication.allnames[i]=="minrate"){
						var button:Button = new Button();						
						if(parentApplication.countNumber1<=parentApplication.listQueueName.length)
							button.enabled=false;
						frmItem = new FormItem();
						button.label="Apply Settings";
						frmItem.addChild(button);
						button.addEventListener(MouseEvent.CLICK,success);
						button.addEventListener(MouseEvent.CLICK,clickGo);						
						form.addChild(frmItem);	
					}					
					this.addChild(form);
					
				}
				//listnerAddHandler();				
			}
			private function success(evt:MouseEvent):void {	
				HAlert.success(HMensagens.Success);
			}
		]]>
	</mx:Script>	
</mx:Canvas>